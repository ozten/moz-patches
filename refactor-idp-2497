# HG changeset patch
# Parent 2d96ee8d9dd44ac0e80d79b33828f05cef79cedb
Refactoring IdP

diff --git a/.gitignore b/.gitignore
--- a/.gitignore
+++ b/.gitignore
@@ -46,8 +46,148 @@ parser/html/java/javaparser/
 .project
 .cproject
 .settings/
 
 # Python virtualenv artifacts.
 python/psutil/*.so
 python/psutil/*.pyd
 python/psutil/build/
+
+AUTHORS
+Android.mk
+LEGAL
+LICENSE
+Makefile.in
+README.txt
+accessible/
+aclocal.m4
+allmakefiles.sh
+b2g/
+browser/LICENSE
+browser/Makefile.in
+browser/app/
+browser/base/content/*.*
+browser/branding/
+browser/build.mk
+browser/components/
+browser/config/
+browser/confvars.sh
+browser/devtools/
+browser/extensions/
+browser/fuel/
+browser/installer/
+browser/locales/
+browser/makefiles.sh
+browser/modules/
+browser/themes/
+build/
+caps/
+chrome/
+client.mk
+client.py
+config/
+configure.in
+content/
+db/
+dbm/
+docshell/
+dom/Makefile.in
+dom/activities/
+dom/alarm/
+dom/apps/
+dom/base/
+dom/battery/
+dom/bindings/
+dom/bluetooth/
+dom/browser-element/
+dom/camera/
+dom/contacts/
+dom/devicestorage/
+dom/dom-config.mk
+dom/file/
+dom/fm/
+dom/icc/
+dom/imptests/
+dom/indexedDB/
+dom/interfaces/
+dom/ipc/
+dom/locales/
+dom/media/
+dom/messages/
+dom/mms/
+dom/network/
+dom/payment/
+dom/permission/
+dom/plugins/
+dom/power/
+dom/settings/
+dom/sms/
+dom/src/
+dom/system/
+dom/telephony/
+dom/tests/
+dom/time/
+dom/webidl/
+dom/wifi/
+dom/workers/
+editor/
+embedding/
+extensions/
+gfx/
+hal/
+image/
+intl/
+ipc/
+js/
+layout/
+mach
+media/
+memory/
+mfbt/
+mobile/
+modules/
+mozglue/
+mozilla-config.h.in
+netwerk/
+nsprpub/
+other-licenses/
+parser/
+probes/
+profile/
+python/
+rdf/
+security/
+services/
+startupcache/
+storage/
+t
+testing/
+toolkit/Makefile.in
+toolkit/addon-sdk/
+toolkit/components/
+toolkit/content/
+toolkit/crashreporter/
+toolkit/devtools/
+toolkit/library/
+toolkit/locales/
+toolkit/mozapps/
+toolkit/obsolete/
+toolkit/profile/
+toolkit/system/
+toolkit/themes/
+toolkit/toolkit-makefiles.sh
+toolkit/toolkit-tiers.mk
+toolkit/webapps/
+toolkit/xre/
+tools/
+uriloader/
+view/
+webapprt/
+widget/
+xpcom/
+xpfe/
+xulrunner/
+.gdbinit
+.hg/
+.hgignore
+.hgtags
+browser/base/jar.mn
\ No newline at end of file
diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -159,17 +159,17 @@ pref("app.update.url", "https://aus3.moz
 
 // app.update.interval is in branding section
 // app.update.promptWaitTime is in branding section
 
 // Show the Update Checking/Ready UI when the user was idle for x seconds
 pref("app.update.idletime", 60);
 
 // Whether or not we show a dialog box informing the user that the update was
-// successfully applied. This is off in Firefox by default since we show a 
+// successfully applied. This is off in Firefox by default since we show a
 // upgrade start page instead! Other apps may wish to show this UI, and supply
 // a whatsNewURL field in their brand.properties that contains a link to a page
 // which tells users what's new in this new update.
 pref("app.update.showInstalledUI", false);
 
 // 0 = suppress prompting for incompatibilities if there are updates available
 //     to newer versions of installed addons that resolve them.
 // 1 = suppress prompting for incompatibilities only if there are VersionInfo
@@ -186,20 +186,20 @@ pref("app.update.service.enabled", true)
 // e.g.
 //  extensions.{GUID}.update.enabled
 //  extensions.{GUID}.update.url
 //  .. etc ..
 //
 pref("extensions.update.enabled", true);
 pref("extensions.update.url", "https://versioncheck.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=%APP_OS%&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
 pref("extensions.update.background.url", "https://versioncheck-bg.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=%APP_OS%&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
-pref("extensions.update.interval", 86400);  // Check for updates to Extensions and 
+pref("extensions.update.interval", 86400);  // Check for updates to Extensions and
                                             // Themes every day
 // Non-symmetric (not shared by extensions) extension-specific [update] preferences
-pref("extensions.dss.enabled", false);          // Dynamic Skin Switching                                               
+pref("extensions.dss.enabled", false);          // Dynamic Skin Switching
 pref("extensions.dss.switchPending", false);    // Non-dynamic switch pending after next
                                                 // restart.
 
 pref("extensions.{972ce4c6-7e08-4474-a285-3208198ce6fd}.name", "chrome://browser/locale/browser.properties");
 pref("extensions.{972ce4c6-7e08-4474-a285-3208198ce6fd}.description", "chrome://browser/locale/browser.properties");
 
 pref("xpinstall.whitelist.add", "addons.mozilla.org");
 pref("xpinstall.whitelist.add.36", "getpersonas.com");
@@ -299,17 +299,17 @@ pref("browser.urlbar.match.url", "@");
 pref("browser.urlbar.default.behavior", 0);
 
 pref("browser.urlbar.formatting.enabled", true);
 pref("browser.urlbar.trimURLs", true);
 
 pref("browser.altClickSave", false);
 
 // Number of milliseconds to wait for the http headers (and thus
-// the Content-Disposition filename) before giving up and falling back to 
+// the Content-Disposition filename) before giving up and falling back to
 // picking a filename without that info in hand so that the user sees some
 // feedback from their action.
 pref("browser.download.saveLinkAsFilenameTimeout", 4000);
 
 pref("browser.download.useDownloadDir", true);
 
 pref("browser.download.folderList", 1);
 pref("browser.download.manager.showAlertOnComplete", true);
@@ -334,17 +334,17 @@ pref("browser.download.panel.removeFinis
 pref("browser.search.searchEnginesURL",      "https://addons.mozilla.org/%LOCALE%/firefox/search-engines/");
 
 // pointer to the default engine name
 pref("browser.search.defaultenginename",      "chrome://browser-region/locale/region.properties");
 
 // disable logging for the search service by default
 pref("browser.search.log", false);
 
-// Ordering of Search Engines in the Engine list. 
+// Ordering of Search Engines in the Engine list.
 pref("browser.search.order.1",                "chrome://browser-region/locale/region.properties");
 pref("browser.search.order.2",                "chrome://browser-region/locale/region.properties");
 pref("browser.search.order.3",                "chrome://browser-region/locale/region.properties");
 
 // search bar results always open in a new tab
 pref("browser.search.openintab", false);
 
 // context menu searches open in the foreground
@@ -396,46 +396,46 @@ pref("browser.tabs.drawInTitlebar", true
 
 // Where to show tab close buttons:
 // 0  on active tab only
 // 1  on all tabs until tabClipWidth is reached, then active tab only
 // 2  no close buttons at all
 // 3  at the end of the tabstrip
 pref("browser.tabs.closeButtons", 1);
 
-// When tabs opened by links in other tabs via a combination of 
+// When tabs opened by links in other tabs via a combination of
 // browser.link.open_newwindow being set to 3 and target="_blank" etc are
 // closed:
 // true   return to the tab that opened this tab (its owner)
 // false  return to the adjacent tab (old default)
 pref("browser.tabs.selectOwnerOnClose", true);
 
 pref("browser.allTabs.previews", false);
 pref("browser.ctrlTab.previews", false);
 pref("browser.ctrlTab.recentlyUsedLimit", 7);
 
 // By default, do not export HTML at shutdown.
 // If true, at shutdown the bookmarks in your menu and toolbar will
 // be exported as HTML to the bookmarks.html file.
 pref("browser.bookmarks.autoExportHTML",          false);
 
-// The maximum number of daily bookmark backups to 
+// The maximum number of daily bookmark backups to
 // keep in {PROFILEDIR}/bookmarkbackups. Special values:
 // -1: unlimited
 //  0: no backups created (and deletes all existing backups)
 pref("browser.bookmarks.max_backups",             10);
 
 // Scripts & Windows prefs
 pref("dom.disable_open_during_load",              true);
 pref("javascript.options.showInConsole",          true);
 #ifdef DEBUG
 pref("general.warnOnAboutConfig",                 false);
 #endif
 
-// This is the pref to control the location bar, change this to true to 
+// This is the pref to control the location bar, change this to true to
 // force this - this makes the origin of popup windows more obvious to avoid
 // spoofing. We would rather not do it by default because it affects UE for web
 // applications, but without it there isn't a really good way to prevent chrome
 // spoofing, see bug 337344
 pref("dom.disable_window_open_feature.location",  true);
 // prevent JS from setting status messages
 pref("dom.disable_window_status_change",          true);
 // allow JS to move and resize existing windows
@@ -527,17 +527,17 @@ pref("mousewheel.with_shift.action", 1);
 #else
 pref("mousewheel.with_alt.action", 1);
 pref("mousewheel.with_shift.action", 2);
 #endif
 pref("mousewheel.with_control.action",3);
 pref("mousewheel.with_meta.action", 1);  // command key on Mac
 pref("mousewheel.with_win.action", 1);
 
-// pref to control the alert notification 
+// pref to control the alert notification
 pref("alerts.slideIncrement", 1);
 pref("alerts.slideIncrementTime", 10);
 pref("alerts.totalOpenTime", 4000);
 
 pref("browser.xul.error_pages.enabled", true);
 pref("browser.xul.error_pages.expert_bad_cert", false);
 
 // Work Offline is best manually managed by the user.
@@ -650,17 +650,17 @@ pref("browser.contentHandlers.types.5.ty
 
 pref("browser.feeds.handler", "ask");
 pref("browser.videoFeeds.handler", "ask");
 pref("browser.audioFeeds.handler", "ask");
 
 // At startup, if the handler service notices that the version number in the
 // region.properties file is newer than the version number in the handler
 // service datastore, it will add any new handlers it finds in the prefs (as
-// seeded by this file) to its datastore.  
+// seeded by this file) to its datastore.
 pref("gecko.handlerService.defaultHandlersVersion", "chrome://browser-region/locale/region.properties");
 
 // The default set of web-based protocol handlers shown in the application
 // selection dialog for webcal: ; I've arbitrarily picked 4 default handlers
 // per protocol, but if some locale wants more than that (or defaults for some
 // protocol not currently listed here), we should go ahead and add those.
 
 // webcal
@@ -1180,8 +1180,10 @@ pref("social.manifest.motown", "{\"origi
 // Comma-separated list of nsIURI::prePaths that are allowed to activate
 // built-in social functionality.
 pref("social.activation.whitelist", "https://motown-dev.mozillalabs.com");
 pref("social.sidebar.open", true);
 pref("social.active", false);
 pref("social.toast-notifications.enabled", true);
 
 pref("dom.identity.enabled", false);
+// Base URL for the Persona Fallback Service
+pref("dom.identity.persona_fallback", "https://desktoppersona.personatest.org");
diff --git a/toolkit/identity/Identity.jsm b/toolkit/identity/Identity.jsm
--- a/toolkit/identity/Identity.jsm
+++ b/toolkit/identity/Identity.jsm
@@ -3,16 +3,18 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 const EXPORTED_SYMBOLS = ["IdentityService"];
 
+const PERSONA_FALLBACK = "dom.identity.persona_fallback";
+
 const Cu = Components.utils;
 const Ci = Components.interfaces;
 const Cc = Components.classes;
 const Cr = Components.results;
 
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
 Cu.import("resource://gre/modules/identity/LogUtils.jsm");
@@ -244,20 +246,23 @@ IDService.prototype = {
    *        (string) (optional) Protocol to use.  Default is https.
    *                 This is necessary because we are unable to test
    *                 https.
    *
    * @param aCallback
    *
    */
   _fetchWellKnownFile: function _fetchWellKnownFile(aDomain, aCallback, aScheme='https') {
-    // XXX bug 769854 make tests https and remove aScheme option
-    let url = aScheme + '://' + aDomain + "/.well-known/browserid";
-    log("_fetchWellKnownFile:", url);
-
+    if (Services.prefs.getPrefType(PERSONA_FALLBACK) != Ci.nsIPrefBranch.PREF_STRING) {
+      return aCallback("Error: Bad persona fallback preference");
+    }
+    let personaBaseUrl = Services.prefs.getCharPref(PERSONA_FALLBACK);
+    log(personaBaseUrl);
+    let url = personaBaseUrl + '/wsapi/discovery?domain=' + aDomain;
+    log(url);
     // this appears to be a more successful way to get at xmlhttprequest (which supposedly will close with a window
     let req = Cc["@mozilla.org/xmlextras/xmlhttprequest;1"]
                 .createInstance(Ci.nsIXMLHttpRequest);
 
     // XXX bug 769865 gracefully handle being off-line
     // XXX bug 769866 decide on how to handle redirects
     req.open("GET", url, true);
     req.responseType = "json";
@@ -267,23 +272,21 @@ IDService.prototype = {
         log("_fetchWellKnownFile", url, ": server returned status:", req.status);
         return aCallback("Error");
       }
       try {
         let idpParams = req.response;
 
         // Verify that the IdP returned a valid configuration
         if (! (idpParams.provisioning &&
-            idpParams.authentication &&
-            idpParams['public-key'])) {
+            idpParams.authentication)) {
           let errStr= "Invalid well-known file from: " + aDomain;
           log("_fetchWellKnownFile:", errStr);
           return aCallback(errStr);
         }
-
         let callbackObj = {
           domain: aDomain,
           idpParams: idpParams,
         };
         log("_fetchWellKnownFile result: ", callbackObj);
         // Yay.  Valid IdP configuration for the domain.
         return aCallback(null, callbackObj);
 
